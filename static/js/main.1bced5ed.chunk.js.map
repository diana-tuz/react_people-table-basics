{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/Person/PersonTr.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","className","role","isActive","classNames","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonTr","person","name","born","died","fatherName","father","motherName","mother","sex","slug","isSelectedPerson","useParams","personSlug","isWomen","PeopleList","people","map","PeoplePage","useState","isError","setIsError","setPeople","isLoading","setIsLoading","useEffect","peopleData","peopleWithParrents","newPerson","find","catch","isAnyPerson","length","isShow","peopleList","noPeopleNotification","Root","path","element","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1bced5ed.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames(\n                'navbar-item', {\n                  'has-background-grey-lighter': isActive,\n                },\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames(\n                'navbar-item', {\n                  'has-background-grey-lighter': isActive,\n                },\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonTr: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    born,\n    died,\n    fatherName,\n    father,\n    motherName,\n    mother,\n    sex,\n    slug,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  const isSelectedPerson = personSlug === slug;\n\n  const isWomen = sex === 'f';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={name}\n      className={classNames(\n        { 'has-background-warning': isSelectedPerson },\n      )}\n    >\n      <td>\n        <NavLink\n          to={`../${slug}`}\n          className={classNames(\n            { 'has-text-danger': isWomen },\n          )}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      {mother && (\n        <td>\n          <NavLink\n            to={`../${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </NavLink>\n        </td>\n      )}\n\n      {!mother && motherName && (\n        <td>{motherName}</td>\n      )}\n      {!mother && !motherName && (\n        <td>-</td>\n      )}\n\n      {father && (\n        <td>\n          <NavLink\n            to={`../${father.slug}`}\n          >\n            {fatherName}\n          </NavLink>\n        </td>\n      )}\n\n      {!father && fatherName && (\n        <td>{fatherName}</td>\n      )}\n\n      {!father && !fatherName && (\n        <td>-</td>\n      )}\n    </tr>\n\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonTr } from '../Person/PersonTr';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <Outlet />\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <PersonTr person={person} />\n          );\n        })}\n\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleList } from '../PeopleList/PeopleList';\n\nexport const PeoplePage: React.FC = () => {\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const getParents = (peopleWithParrents: Person[]) => {\n    const peopleWithParents = peopleWithParrents.map((person) => {\n      const newPerson = { ...person };\n\n      newPerson.father = peopleWithParrents\n        .find(father => father.name === newPerson.fatherName);\n\n      newPerson.mother = peopleWithParrents\n        .find(mother => mother.name === newPerson.motherName);\n\n      return newPerson;\n    });\n\n    return peopleWithParents;\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(peopleData => {\n        setPeople(getParents(peopleData));\n        setIsLoading(false);\n      })\n      .catch(() => setIsError(true));\n  }, []);\n\n  const isAnyPerson = people.length > 0;\n\n  const isShow = {\n    peopleList: !isLoading && !isError && isAnyPerson,\n    noPeopleNotification: !isAnyPerson && !isLoading && !isError,\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isShow.noPeopleNotification && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isShow.peopleList\n            && <PeopleList people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Route, HashRouter as Router, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":personSlug?\" element={(<PeoplePage />)} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<h1 className=\"title\">Page not found</h1>}\n        />\n        <Route />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst container = document.getElementById('root') as HTMLDivElement;\n\ncreateRoot(container)\n  .render(<Root />);\n"],"sourceRoot":""}